<?xml version="1.1" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:simpleType name="percentType">
    <xs:annotation>
      <xs:documenation>
       Generic type for 0-100 percentages
      </xs:documenation>
    </xs:annotation>
    <xs:restriction base="xs:double">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="100"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:attributeGroup name="locAttrs">
    <xs:annotation>
      <xs:documenation>
       Attribute group for display location
      </xs:documenation>
    </xs:annotation>
    <xs:attribute name="x_orig" type="xs:double"/>
    <xs:attribute name="y_orig" type="xs:double"/>
    <xs:attribute name="z_ind" type="xs:integer" use="optional"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="sizeAttrs">
    <xs:annotation>
      <xs:documenation>
       Attribute group for display size
      </xs:documenation>
    </xs:annotation>
    <xs:attribute name="x_px" type="xs:double"/>
    <xs:attribute name="y_px" type="xs:double"/>
    <xs:attribute name="rot_angle" type="xs:double"/>
  </xs:attributeGroup>
 
  <xs:attributeGroup name="hrefAttrs">
    <xs:annotation>
      <xs:documenation>
       Attribute group for hrefs
      </xs:documenation>
    </xs:annotation>
    <xs:attribute name="target" type="xs:anyURI"/>
    <xs:attribute name="type">
      <xs:simpleType>
	<xs:restriction base="xs:token">
	  <xs:enumeration value="internal"/>
	  <xs:enumeration value="external"/>
	</xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  
  <xs:simpleType name="hexColourType">
    <xs:annotation>
      <xs:documenation>
       Flat colour. Hex format
      </xs:documenation>
    </xs:annotation>
    <xs:union memberTypes="xs:NMTOKEN">
      <xs:simpleType>
	<xs:restriction base="xs:token">
	  <xs:pattern value="#[0-9a-fA-F]{6}"/>
	</xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
<!--
  <xs:complextype name="gradColourType">
    <xs:annotation>
      <xs:documenation>
       Colour gradient
      </xs:documenation>
    </xs:annotation>
    <xs:attribute name="grad_type" type="xs:string" use="optional"/>
    <xs:attribute name="grad_offset" type="percentType"/>
    <xs:sequence>
      <xs:element name="colour1" type="hexColourType"/>
      <xs:element name="colour2" type="hexColourType"/>
    </xs:sequence>
  </xs:complextype>
  -->
  <xs:complextype name="colourType">
    <xs:annotation>
      <xs:documenation>
       Generic colour type
      </xs:documenation>
    </xs:annotation>
    <xs:attribute name="alpha" type="percentType"/>
    <xs:choice>
      <xs:element name="flat" type="hexColourType"/>
      <!--<xs:element name="grad" type="gradColourType"/>-->
      <xs:any minOccurs="0"/>
    </xs:choice>
  </xs:complextype>

  <xs:complexType name="visualType">
    <xs:annotation>
      <xs:documenation>
       Generic visual type definition
      </xs:documenation>
    </xs:annotation>
    <xs:attributeGroup ref="locAttrs"/>
    <xs:attributeGroup ref="sizeAttrs"/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="disp_duration_s" type="xs:double" use="optional"/>
    <xs:attribute name="show_after_s" type="xs:double" use="optional"/>
    <xs:attribute name="fill_colour" type="colourType" use="optional"/>
    <xs:sequence minOccurs="0">
      <xs:element name="shading" minOccurs="0">
	<xs:annotation>
	  <xs:documentation>
	     basic_shading should add shade all around object. Extend for more complex shading.
	  </xs:documentation>
	</xs:annotation>
	<xs:complexType>
	  <xs:attribute name="enable" type="xs:boolean"/>
	  <xs:choice>
	    <xs:element name="basic_shading">
	      <xs:complexType>
		<xs:attribute name="colour" type="colourType"/>
	      </xs:complexType>
	    </xs:element>
	    <xs:any minOccurs="0"/>
	  </xs:choice>
	</xs:complexType>
      </xs:element>
      <xs:any minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="textType" mixed="true">
    <xs:annotation>
      <xs:documentation>
	Text.
	Mixed type allows mixing elements with text.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="include_source" type="xs:anyURI" use="optional"/>
    <xs:anyAttribute/>
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
	<xs:element name="href" type="xs:string">
	  <xs:attributeGroup ref="hrefAttrs"/>
	</xs:element>
	<xs:element name="underscore" type="xs:string"/>
	<xs:element name="italic" type="xs:string"/>
	<xs:element name="bold" type="xs:string"/>
	<xs:element name="font">
	  <xs:complexType>
	    <xs:simpleContent>
	      <xs:extension base="xs:string">    
		<xs:attribute name="colour" type="colourType" use="optional"/>
		<xs:attribute name="size" type="xs:double" use="optional"/>
		<xs:attribute name="name" type="xs:string" use="optional"/>
	      </xs:extension>
	    </xs:simpleContent>
	  </xs:complexType>
	</xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="shapeType">
    <xs:annotation>
      <xs:documenation>
       A shape
      </xs:documenation>
    </xs:annotation>
    <xs:extension base="visualType">
      <xs:complexContenet>
	<xs:attribute name="x_end" type="xs:double" use="optional"/>
	<xs:attribute name="y_end" type="xs:double" use="optional"/>
	<xs:attribute name="type">
	  <xs:simpleType type="xs:token">
	    <xs:annotation>
	      <xs:documentation>
		Applications should interpret at least:
		"circle"
		"textbox"
		"line" (with use of x/y_end)
	      </xs:documentation>
	    </xs:annotation>
	  </xs:simpleType>
	</xs:attribute>
	<xs:anyAttribute/>
	<xs:all minOccurs="0">
	  <xs:element name="text" type="textType"/><!-- Text always in a container shape -->
	  <xs:element name="stroke" type="strokeType"/>
	  <xs:element name="href" type="xs:string">
	    <xs:attributeGroup ref="hrefAttrs"/>
	  </xs:element>
	</xs:all>
      </xs:complexContenet>
    </xs:extension>
  </xs:complexType>

  <xs:complexType name="playableType">
    <xs:annotation>
      <xs:documenation>
       Playable media. Video or Audio
      </xs:documenation>
    </xs:annotation>
    <xs:extension base="visualType">
      <xs:complexContent>
	<xs:attribute name="include_source" type="xs:anyURI"/>
	<xs:attribute name="display_player" type="xs:boolean" use="optional"/>
	<xs:attribute name="seek_offset" type="xs:double" use="optional" />
	<xs:attribute name="autoplay" type="xs:boolean" use="optional"/>
	<xs:anyAttribute/>
      </xs:complexContent>
      <xs:sequence minOccurs="0">
	<xs:any minOccurs="0"/>
      </xs:sequence>
    </xs:extension>
  </xs:complexType>

  <xs:complexType name="imageType">
    <xs:annotation>
      <xs:documenation>
       An image
      </xs:documenation>
    </xs:annotation>
    <xs:extension base="visualType">
      <xs:complexContent>
	<xs:attribute name="include_source" type="xs:anyURI"/>
      </xs:complexContent>
    </xs:extension>
  </xs:complexType>

  <xs:complexType name="pageType">
    <xs:annotation>
      <xs:documenation>
       A Page/Slide/Whatever
      </xs:documenation>
    </xs:annotation>
    <xs:extension base="visualType">
      <xs:complexContent>
	<xs:anyAttribute/>
	<xs:sequence>
	  <xs:choice minOccurs="0" maxOccurs="unbounded">
	    <xs:element name="shape" type="shapeType"/>
	    <xs:element name="image" type="imageType"/>
	    <xs:element name="playable" type="playableType"/>
	  </xs:choice>
	  <xs:any minOccurs="0"/>
	</xs:sequence>
      </xs:complexContent>
    </xs:extension>
  </xs:complexType>
  
  <xs:element name="metadata">
    <xs:annotation>
      <xs:documenation>
        Metadata section. Contains (at minimum) author and version
      </xs:documenation>
    </xs:annotation>
    <xs:complexType>
      <xs:all>
	<xs:element name="author" minOccurs="0" maxOccurs="1" type="string"/>
	<xs:element name="version" minOccurs="0" maxOccurs="1" type="string"/>
	<xs:element minOccurs="0" maxOccurs="1" name="comment" type="string"/>
	<xs:any minOccurs="0"/>
      </xs:all>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="document">
    <xs:complexType>
      <xs:anyAttribute/>
      <xs:sequence>
	<xs:element name="page" minOccurs="0" maxOccurs="unbounded" type="pageType">
	<xs:any minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
<!--
    <xs:element name="presentation">
    <xs:complexType>
    <xs:sequence>
    <xs:any minOccurs="0"/>
    <xs:element maxOccurs="unbounded" name="visualBase">
    <xs:complexType>
    <xs:complexContent>
    <xs:extension base="visualType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
    <xs:annotation>
    <xs:documentation>
    Base visual object for presentation (i.e a slide).
    </xs:documentation>
    </xs:annotation>
    
    <xs:element name="text">
    <xs:complexType mixed="true">
    <xs:annotation>
    <documentation>
    Text to be displayed.
    </documentation>
    </xs:annotation>
    <xs:sequence>
    <xs:attribute name="font" type="xs:string"/>
    <xs:attribute name="fontsize" type="xs:string"/>
    <xs:attribute name="fontcolor" type="xs:string"/>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:element name="bold" type="xs:boolean"/>
    <xs:element name="italic" type="xs:boolean"/>
    <xs:element name="link" type="xs:string">
    <xs:attribute name="ref" type="xs:string"/>
    <xs:attribute name="ref_type">
    <xs:simpleType>
    <xs:restriction base="xs:string">
    <xs:enumeration value="internal"/>
    <xs:enumeration value="external"/>
    </xs:restriction>
    </xs:simpleType>
    </xs:attribute>
    </xs:element>
    </xs:choice>
    
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:sequence>
    
    </xs:element>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    </xs:schema>
-->
